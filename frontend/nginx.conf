server {
    listen 80;
    listen [::]:80;
    server_name j11a603.p.ssafy.io www.j11a603.p.ssafy.io;

    # HTTP에서 HTTPS로 리디렉션
    location / {
        return 308 https://$host$request_uri;
    }
    
     location /nginx_status {
        stub_status on;
        allow 127.0.0.1;
        deny all;
    }
}

server {
    listen 443 ssl;
    listen [::]:443 ssl;
    server_name j11a603.p.ssafy.io www.j11a603.p.ssafy.io; 

    # SSL 설정
    ssl_certificate /etc/letsencrypt/live/j11a603.p.ssafy.io/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/j11a603.p.ssafy.io/privkey.pem;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;

    client_max_body_size 100M;

    location / {
    
        root   /usr/share/nginx/html;
        index  index.html index.htm;

        #SPA 새로고침 처리
        try_files $uri $uri/ /index.html =404;
    }

    # User API 요청 처리
    location /api {
        allow all;
        proxy_pass http://j11a603.p.ssafy.io:8080;  # 사용자 관련 요청 리버스 프록시
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # CORS 설정
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'Origin, Authorization, Accept, Content-Type, X-Requested-With' always;

        # wss(web-socket) 설정
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";

        # OPTIONS 메소드에 대한 프리플라이트 요청 처리
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' '$http_origin' always;  # 특정 출처만 허용
            add_header 'Access-Control-Allow-Credentials' 'true';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'Origin, Authorization, Accept, Content-Type, X-Requested-With';
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain charset=UTF-8';
            add_header 'Content-Length' 0;
            return 204;
        }
    }

    # Data API 요청 처리
    location /data {
        allow all;
        proxy_pass http://j11a603.p.ssafy.io:8089;  # 사용자 관련 요청 리버스 프록시
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # CORS 설정
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'Origin, Authorization, Accept, Content-Type, X-Requested-With' always;

        # wss(web-socket) 설정
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";

        # OPTIONS 메소드에 대한 프리플라이트 요청 처리
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' '$http_origin' always;  # 특정 출처만 허용
            add_header 'Access-Control-Allow-Credentials' 'true';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'Origin, Authorization, Accept, Content-Type, X-Requested-With';
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain charset=UTF-8';
            add_header 'Content-Length' 0;
            return 204;
        }
    }
}